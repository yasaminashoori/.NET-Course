using System;

namespace Pow_MaxMin
{
    class Program
    {
        // public int min;
        // public int max;
        static void Main(string[] args, double maximum)
        {
            Console.WriteLine("Enter two number to power it  :  \n First number :");

            var firstNumberPow = Convert.ToDouble(Console.ReadLine());

            Console.WriteLine("Second number :");

            var secondNumberPow = Convert.ToDouble(Console.ReadLine());

            var power = Pow(firstNumberPow, secondNumberPow);

            Console
                .WriteLine(firstNumberPow +
                " power " +
                secondNumberPow +
                " : " +
                power);

            Console.ReadLine();
            Console.Clear();

            Console.WriteLine("Enter 5 numbers : (Press enter for each number) ");

            var myArray = new double[5];

            int x = 0;

            while (x < myArray[5])
            {
                x++;
                myArray[x] = Convert.ToDouble(Console.ReadLine());
            }

            double maximum = MaximumOfNumbers(myArray);
            double minimum = MinimumOfNumbers(myArray);

            Console.WriteLine($"Maximum number is: {maximum}");
            Console.WriteLine($"Minimum number is: {minimum}");
        }

        static double Pow(double firstNumberPow, double secondNumberPow)
        {
            double number = firstNumberPow;
            if (firstNumberPow == 0)
            {
                return 0;
            }
            if (firstNumberPow == 0)
            {
                return 1;
            }
            for (int y = 1; y < secondNumberPow; y++)
            {
                number *= firstNumberPow;
            }
            return number;
        }

        static double MaximumOfNumbers(double[] myArray, double maximum)
        {
            double maxElement = myArray[0];
            for (int index = 1; index < myArray.Length; index++)
            {
                if (myArray[index] > maxElement)
                {
                    maxElement = myArray[index];
                }
            }
            maxElement = maximum;
            return Convert.ToInt32(maxElement);
        }

        static double MinimumOfNumbers(double[] firstNumberPow, double[] myArray)
        {
            return 1;
        }
    }
}

//  static void Main(string[] args)
//         {
//             // var result = Math.Pow(10, 2);
//             var myResult = Multiply(10, 20);
//             Console.WriteLine(myResult);
//         }

//         static double Multiply(double x, double y)
//         {
//             var result = x * y;
//             return result;
//         }



double result = 1;
 
            //for negative force
            bool sing = true;
            if(expNumber<0)
            {
                sing = false;
                expNumber = expNumber * -1;
            }
            //
            for (int i = 1; i <= expNumber; i++)
            {
                if (sing)
                    result = result * baseNumber;
                else
                    result /= baseNumber;
            }
            return result;